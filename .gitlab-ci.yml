stages:
  - check
  - build
  - test
  - deploy

# Check stage

lint_node:
  image: node:23-alpine
  stage: check
  script:
    - cd src/web
    - npm install
    - npm run lint

vulncheck_node:
  image: node:23-alpine
  stage: check
  script:
    - cd src/web
    - npm install
    - npm audit

lint_go:
  image: golang:1.24-alpine
  stage: check
  script:
    - cd src/goformail
    - wget -O- -nv https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s v2.1.1
    - ./bin/golangci-lint run

vulncheck_go:
  image: golang:1.24-alpine
  stage: check
  script:
    - cd src/goformail
    - go install golang.org/x/vuln/cmd/govulncheck@latest
    - govulncheck ./...

# Build stage

build_node:
  image: node:23-alpine
  stage: build
  script:
    - cd src/web
    - npm install
    - npm run build
  artifacts:
    paths:
      - src/web/out/*

build_go:
  image: golang:1.24-alpine
  stage: build
  script:
    - cd src/goformail
    - rm -r ./internal/rest/out
    - cp -r ../web/out ./internal/rest/out
    - go build ./cmd/goformail
  needs:
    - build_node
  artifacts:
    paths:
      - src/goformail/goformail

# Test stage

test_node:
  image: node:23-alpine
  stage: test
  script:
    - cd src/web
    - npm install
    - npm run test

test_go:
  image: golang:1.24-alpine
  stage: test
  services:
    - docker:dind
  tags:
    - rootless_docker
  script:
    - cd src/goformail
    - go test ./...

# Deploy stage

push_image:
  image: docker:latest
  stage: deploy
  services:
    - docker:dind
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
    LATEST_TAG: $CI_REGISTRY_IMAGE:latest
  script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u $CI_REGISTRY_USER --password-stdin
    - docker context create gfm
    - docker buildx create --use gfm
    - docker buildx build --push --tag $IMAGE_TAG --tag $LATEST_TAG .
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'

deploy:
  image: alpine:latest
  stage: deploy
  script:
    - apk add curl
    - curl -u $WEBHOOK_USER:$WEBHOOK_PASSWORD https://costwynn.xyz/cgi-bin/gfm-update.sh
  needs:
    - push_image
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'